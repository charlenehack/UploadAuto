/* ========== 位运算 ========== */

// 正数原码、反码、补码都相同，如 1：原码（0000 0001） 反码（0000 0001） 补码（0000 0001）
// 负数原码符号位为1，反码符号位不变其它位都变，补码为反码加1，如 -1：原码（1000 0001） 反码（1111 1110） 补码（1111 1111）
// 位运算都是以补码来进行运算
func main() {
	fmt.Println(2&3)  //  与运算，0000 0010 与 0000 0011，位同为0取0，同为1取1，不同取0
	fmt.Println(2|3)  //  或运算，位同为0取0，只要有一个为1就取1
	fmt.Println(2^3)  //  异或运算，位不相同取1，相同取0
	fmt.Println(-2^3)  // 1111 1110 ^ 0000 0011 得 1111 1101（补码），原码为 1000 0011
	fmt.Println(1>>2)  // 右移运算符：低位溢出，符号位不变，并用符号位补溢出的高位；0000 0001 右移2位为 0000 0000
	fmt.Println(1<<2)  // 左移运算符：符号位不变，低位补0；0000 0001 左移2位为 0000 0100
}
